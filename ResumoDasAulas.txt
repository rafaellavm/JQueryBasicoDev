------------------------------------- aula 03 -------------------------------------

1) link para download para várias versões:

https://jqueryui.com/download/all/

------------------------------------- aula 04 -------------------------------------

2) $
usando pelo jquery pra fazer a leitura do DOM (modelo de objeto dentro do documento HTML)

ele é semelhante ao uso do operador JQuery

 $('#clique').click(function(){
 
 jQuery('#clique').click(function(){
 
 
-------

3) $(document)
representa todo documento html

-------

4) .ready

$(document).ready

é uma função que espera que todo conteúdo html seja carregado, assim como as funções javascript, todo código css

é semelhante a função 'onload'

-------

5) operador ponto

exemplo: para conseguir acessar uma classe css comum a vários elementos html é só colocar um ponto.

-------

6) operador cerquilha 'jogo da velha' = #

quando desejamos aplicar uma regra pra um elemento específico utilizamos o cerquilha, através do id dele.


-------

 $('#clique').click(function(){
 
 $() = componente que quero acessar
 
 .click = função que desejo executar
 
------- 
 
7) Funções em JQuery

As funções do Jquery podem ser passivas ou ativas.

ativa: vc vai usá-la para ler o elemento e fazer alguma ação com ele.

 $('#clique').click(function(){
  alert('Hello,world!');
   });
   

passiva: 

$(document).ready(function(){
 $('#clique').click()
  });

assim forçaria o click do link assim que documento html estivesse pronto.

-------

8) leitura por tags

quero que todos os LINKS acessem a função:

 $('a').click(function(){
  alert('Hello,world!');
  });
             

------------------------------------- aula 05 -------------------------------------
 
 9) exemplo: temos vários links na página html, distribuídos em várias div's, tabelas, etc.
 
 quero que a mesma regra se aplique a todos os links dentro da 'div1': 
 
  
        <div id="div1">
            <a href="#">Clique!</a>
            <a href="#">Clique 2!</a>
        </div>

        <div id="div2">
            <a href="#">Clique 3!</a>
        </div>
        
 - nesse caso podemos usar o 'ENCADEAMENTO DE CHAMADAS': 
 
 - vou pegar todos os links dentro da 'div1': 
 
 $('#div1 a').click(function(){
   alert('Hello,world!');
});

-------

10) outra situação: quero acessar um link ou uma classe de links dentro dessa 'div1':

- desejo que a regra se aplique a todo link que tenha a classe 'x' dentro da 'div1':

        <div id="div1">
            <a href="#" class="x">Clique!</a>
            <a href="#" class="x">Clique 2!</a>
            <a href="#">Clique 3!</a>
        </div>

        <div id="div2">
            <a href="#" class="x">Clique 4!</a>
        </div>
        
 - obs: a div 'div2' também tem um link com a classe 'x', mas ele não deve entrar na regra.
 
 - Resolução:
 
  $('#div1 a.x').click(function(){
    alert('Hello,world!');
  });
  
-------  
  
  - agora eu quero que a regra valha para todas as classes 'x' dentro da 'div1':
  
  $('#div1 .x').click(function(){
    alert('Hello,world!');
  });
  
  - nesse caso o '<span>' também entra na regra:
  
  <div id="div1">
            <a href="#" class="x">Clique!</a>
            <a href="#" class="x">Clique 2!</a>
            <a href="#">Clique 3!</a>
            <span class="x">Teste</span>
        </div>

        <div id="div2">
            <a href="#" class="x">Clique 4!</a>
        </div>
                
-------  

- agora desejo que a regra sirva para todos os links que tenham a classe 'x' na página:

$('a.x').click(function(){
    alert('Hello,world!');
  });
 
-------  

- quero que a regra se aplique a 'div1' e a 'div2', deixando de fora a 'div3':

 <div id="div1"> 
        <a href="#" class="x">Clique!</a> 
        <a href="#" class="x">Clique 2!</a> 
        <a href="#">Clique 3!</a> 
        <span class="x">Teste</span> 
    </div>
    <div id="div2"> 
        <a href="#" class="x">Clique 4!</a> 
    </div>
    <div id="div3"> 
        <a href="#" class="x">Clique 5!</a> 
    </div>
    
- para isso é só copiar a regra e dividir as duas com uma vírgula:

$('#div1 a.x, #div2 a.x').click(function () {
 alert('Hello,world!');
});


------------------------------------- aula 06 -------------------------------------

Concatenação de várias funções ao mesmo tempo
 
 -  quero que, quando clicar no botão, a função pegue o valor do 'value' do input:
 
  <div id="div1">
        <a href="#">Clique!</a>
    </div>
    
    <input type="text" id="txtTest" value=""/>
    
 value = atributo que é utilizado pra guardar o valor do campo;
 
 função:
 
  $('a').click(function () {
   var valor = $('#txtTest').val();
   alert(valor);
});

- funcao val() = funcao que recupera o valor value dos campos.

- pode ser ativa ou passiva:

ativa: val()
passiva: val("valor que eu quero que o campo tenha")
 
- agora vou querer atribuir algumas regras a esse id 'txtTest' após o clique:

- ele vai atribuir o css, depois esconder o input e depois pegar o valor value do input e exibir no alert 

$('a').click(function () {
 var valor = $('#txtTest').css('background-color', 'red').hide().val();
  alert(valor);
});

------------------------------------- aula 07 -------------------------------------

----- Hierarquia de seletores no jQuery -----

- quero que TODOS MEUS ELEMENTOS FILHOS '<li>'  tenham a regra do css aplicada:

<ul id="lista">
        <li>Elemento 1</li>
        <li>Elemento 2</li>
        <li>Elemento 3</li>
        <ul>
            <li>SubElemento 1</li>
            <li>SubElemento 2</li>
            <ul>
                <li>Camada 3.1</li>
                <li>Camada 3.2</li>
                <li>Camada 3.3</li>
            </ul>
        </ul>
</ul>

 $(document).ready(function () {
            
  $('ul >li').css("color", "green");
 });
 
----------------
 
- existe outra forma: quero pegar TODOS OS '<li>' da classe 'lista' e colocar a letra na cor verde:
- nesse caso colocamos um espaço entre a classe e a tag '<li>':
 
 
 $(document).ready(function () {
            
  $('#lista li').css("color", "green");
 });
 
 
----------------
 
- quero que todos os <ul> DENTRO da div "lista" vão ter os seus filhos "<li>" diretos sendo pintados 
- então o ul do proprio id 'lista' não entra nessa condição:

 $(document).ready(function () {
            $('#lista ul > li').css('color', 'green');
        });
        
----------------

- quero que somente o primeiro <ul> dentro da div 'lista' tenha todos os '<li>' pintados:
- quero que o primeiro <ul> associado à id 'lista' tenha seu primeiro '<li>' diretamente associado PINTADO:

  $(document).ready(function () {
            $('#lista > ul > li').css('color', 'green');
        });
        
---------------- 

        <ul id="lista">
        <li id="el1">Elemento 1</li>
        <li>Elemento 2</li>
        <li>Elemento 3</li>
        <ul>
            <li>SubElemento 1</li>
            <li>SubElemento 2</li>
            <ul>
                <li>Camada 3.1</li>
                <li>Camada 3.2</li>
                <li>Camada 3.3</li>
            </ul>
        </ul>
    </ul>

- quero meu primeiro elemento irmão <li> depois do <li> de id 'el1' seja pintado de verde

 $(document).ready(function () {
            $('#el1 + li').css('color', 'green');
        });
        
        
- quero que TODOS os irmãos '<li>' após o '<li>' com id 'el1' sejam pintados de verde:

$(document).ready(function () {
            $('#el1 ~ li').css('color', 'green');
        }); 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
